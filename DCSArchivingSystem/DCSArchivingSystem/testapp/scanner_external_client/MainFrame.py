"""Subclass of MainFrameBase, which is generated by wxFormBuilder."""

import wx
import gui
from simple_base import TwainBase

# You can either Poll the TWAIN source, or process the scanned image in an
# event callback. The event callback has not been fully tested using GTK.
# Specifically this does not work with Tkinter.
USE_CALLBACK=True

# Implementing MainFrameBase
class MainFrame( gui.MainFrameBase, TwainBase):
	def OnClose( self, event ):
		self.Terminate()
		self.Destroy()
	
	def m_btConnectClick( self, event ):
		self.OpenScanner(self.GetHandle(), ProductName="Simple wxPython Demo", UseCallback=USE_CALLBACK)
	
	def m_btConnectHoverIn( self, event ):
		self.m_statusBar.SetStatusText("Select a scanner for acquiring images")
	
	def m_btConnectHoverOut( self, event ):
		self.m_statusBar.SetStatusText("")
	
	def m_btScanClick( self, event ):
		return self.AcquireNatively()
	
	def m_btScanHoverIn( self, event ):
		self.m_statusBar.SetStatusText("Scan an image")
	
	def m_btScanHoverOut( self, event ):
		self.m_statusBar.SetStatusText("")
	
	def m_btUploadClick( self, event ):
		event.Skip()
	
	def m_btUploadHoverIn( self, event ):
		self.m_statusBar.SetStatusText("Upload an image")
	
	def m_btUploadHoverOut( self, event ):
		self.m_statusBar.SetStatusText("")

	def m_btExitClick( self, event ):
		self.Close(1)
	
	def m_btExitHoverIn( self, event ):
		self.m_statusBar.SetStatusText("Terminate this program")
	
	def m_btExitHoverOut( self, event ):
		self.m_statusBar.SetStatusText("")

	def DisplayImage(self, ImageFileName):
		bmp = wx.Image(ImageFileName, wx.BITMAP_TYPE_BMP).ConvertToBitmap()
		self.m_bitmap.SetBitmap(bmp)
		self.m_scrolledWindow.maxWidth = bmp.GetWidth()
		self.m_scrolledWindow.maxHeight = bmp.GetHeight()
		self.m_scrolledWindow.SetScrollbars(20, 20, bmp.GetWidth()/20, bmp.GetHeight()/20)
		self.m_bitmap.Refresh()
		
	
	
